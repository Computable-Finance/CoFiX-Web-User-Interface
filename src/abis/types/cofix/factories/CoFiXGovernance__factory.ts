/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CoFiXGovernance,
  CoFiXGovernanceInterface,
} from "../CoFiXGovernance";

const _abi = [
  {
    inputs: [],
    name: "_governance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "checkAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "flag",
        type: "uint256",
      },
    ],
    name: "checkGovernance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBuiltinAddress",
    outputs: [
      {
        internalType: "address",
        name: "cofiToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "cofiNode",
        type: "address",
      },
      {
        internalType: "address",
        name: "cofixDAO",
        type: "address",
      },
      {
        internalType: "address",
        name: "cofixRouter",
        type: "address",
      },
      {
        internalType: "address",
        name: "cofixController",
        type: "address",
      },
      {
        internalType: "address",
        name: "cofixVaultForStaking",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCoFiNodeAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCoFiTokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCoFiXControllerAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCoFiXDAOAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCoFiXRouterAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCoFiXVaultForStakingAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "getGovernance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "governance",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "migrate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "registerAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cofiToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "cofiNode",
        type: "address",
      },
      {
        internalType: "address",
        name: "cofixDAO",
        type: "address",
      },
      {
        internalType: "address",
        name: "cofixRouter",
        type: "address",
      },
      {
        internalType: "address",
        name: "cofixController",
        type: "address",
      },
      {
        internalType: "address",
        name: "cofixVaultForStaking",
        type: "address",
      },
    ],
    name: "setBuiltinAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "flag",
        type: "uint256",
      },
    ],
    name: "setGovernance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newGovernance",
        type: "address",
      },
    ],
    name: "update",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506115ca806100206000396000f3fe608060405234801561001057600080fd5b506004361061011b5760003560e01c80637d88277b116100b25780639677649211610081578063b13f5f1911610066578063b13f5f1914610399578063c4d66de8146103ac578063d95106ed146103bf57600080fd5b80639677649214610368578063ad68ebf71461038657600080fd5b80637d88277b146102685780638f9560df1461027b5780638fe77e86146102e557806391e1472b146102f857600080fd5b8063448e652a116100ee578063448e652a146101b7578063593ab5e1146101d5578063746b56f9146101f3578063783f52551461025557600080fd5b80630a654853146101205780631b2b91d3146101645780631c1b8772146101825780631c2f3e3d14610197575b600080fd5b60075473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b60045473ffffffffffffffffffffffffffffffffffffffff1661013a565b610195610190366004611301565b6103dd565b005b60025461013a9073ffffffffffffffffffffffffffffffffffffffff1681565b60065473ffffffffffffffffffffffffffffffffffffffff1661013a565b60085473ffffffffffffffffffffffffffffffffffffffff1661013a565b6003546004546005546006546007546008546040805173ffffffffffffffffffffffffffffffffffffffff97881681529587166020870152938616938501939093529084166060840152831660808301529190911660a082015260c00161015b565b61019561026336600461143d565b610635565b610195610276366004611342565b610827565b6102d7610289366004611301565b73ffffffffffffffffffffffffffffffffffffffff166000908152600a60205260409020547401000000000000000000000000000000000000000090046bffffffffffffffffffffffff1690565b60405190815260200161015b565b61013a6102f336600461148b565b610b6b565b61035861030636600461143d565b73ffffffffffffffffffffffffffffffffffffffff919091166000908152600a60205260409020547401000000000000000000000000000000000000000090046bffffffffffffffffffffffff161190565b604051901515815260200161015b565b60055473ffffffffffffffffffffffffffffffffffffffff1661013a565b61019561039436600461143d565b610bad565b6101956103a73660046114cd565b610e12565b6101956103ba366004611301565b610f8c565b60035473ffffffffffffffffffffffffffffffffffffffff1661013a565b60025473ffffffffffffffffffffffffffffffffffffffff16338114806104a357506040517f91e1472b0000000000000000000000000000000000000000000000000000000081523360048201526000602482015273ffffffffffffffffffffffffffffffffffffffff8216906391e1472b9060440160206040518083038186803b15801561046b57600080fd5b505afa15801561047f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a39190611469565b61050e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f436f4669583a21676f760000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8416908117909155604080517f746b56f9000000000000000000000000000000000000000000000000000000008152905163746b56f99160048082019260c092909190829003018186803b1580156105a057600080fd5b505afa1580156105b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d891906113c4565b50506001805473ffffffffffffffffffffffffffffffffffffffff9485167fffffffffffffffffffffffff000000000000000000000000000000000000000091821617909155600080549590941694169390931790915550505050565b6002546040517f91e1472b0000000000000000000000000000000000000000000000000000000081523360048201526000602482015273ffffffffffffffffffffffffffffffffffffffff909116906391e1472b9060440160206040518083038186803b1580156106a557600080fd5b505afa1580156106b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106dd9190611469565b610743576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f436f4669583a21676f76000000000000000000000000000000000000000000006044820152606401610505565b80156107b95760408051808201825273ffffffffffffffffffffffffffffffffffffffff9384168082526bffffffffffffffffffffffff93841660208084019182526000928352600a90529290209051915191909316740100000000000000000000000000000000000000009190921602179055565b6040805180820182526000808252602080830182815273ffffffffffffffffffffffffffffffffffffffff8781168452600a90925293909120915192516bffffffffffffffffffffffff16740100000000000000000000000000000000000000000292169190911790555050565b6002546040517f91e1472b0000000000000000000000000000000000000000000000000000000081523360048201526000602482015273ffffffffffffffffffffffffffffffffffffffff909116906391e1472b9060440160206040518083038186803b15801561089757600080fd5b505afa1580156108ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108cf9190611469565b610935576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f436f4669583a21676f76000000000000000000000000000000000000000000006044820152606401610505565b73ffffffffffffffffffffffffffffffffffffffff86161561099257600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff88161790555b73ffffffffffffffffffffffffffffffffffffffff8516156109ef57600480547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff87161790555b73ffffffffffffffffffffffffffffffffffffffff841615610a4c57600580547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff86161790555b73ffffffffffffffffffffffffffffffffffffffff831615610aa957600680547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff85161790555b73ffffffffffffffffffffffffffffffffffffffff821615610b0657600780547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84161790555b73ffffffffffffffffffffffffffffffffffffffff811615610b6357600880547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83161790555b505050505050565b600060098383604051610b7f92919061155f565b9081526040519081900360200190205473ffffffffffffffffffffffffffffffffffffffff16905092915050565b6002546040517f91e1472b0000000000000000000000000000000000000000000000000000000081523360048201526000602482015273ffffffffffffffffffffffffffffffffffffffff909116906391e1472b9060440160206040518083038186803b158015610c1d57600080fd5b505afa158015610c31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c559190611469565b610cbb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f436f4669583a21676f76000000000000000000000000000000000000000000006044820152606401610505565b600254604080517f96776492000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff16916396776492916004808301926020929190829003018186803b158015610d2657600080fd5b505afa158015610d3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d5e9190611325565b905073ffffffffffffffffffffffffffffffffffffffff8316610e02576040517fdaa78c0f0000000000000000000000000000000000000000000000000000000081526000600482015273ffffffffffffffffffffffffffffffffffffffff82169063daa78c0f9084906024016000604051808303818588803b158015610de457600080fd5b505af1158015610df8573d6000803e3d6000fd5b5050505050505050565b610e0d838284611081565b505050565b6002546040517f91e1472b0000000000000000000000000000000000000000000000000000000081523360048201526000602482015273ffffffffffffffffffffffffffffffffffffffff909116906391e1472b9060440160206040518083038186803b158015610e8257600080fd5b505afa158015610e96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eba9190611469565b610f20576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f436f4669583a21676f76000000000000000000000000000000000000000000006044820152606401610505565b8060098484604051610f3392919061155f565b908152604051908190036020019020805473ffffffffffffffffffffffffffffffffffffffff929092167fffffffffffffffffffffffff0000000000000000000000000000000000000000909216919091179055505050565b73ffffffffffffffffffffffffffffffffffffffff81161561100a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f436f466958476f7665726e616e63653a216164647265737300000000000000006044820152606401610505565b611013306111f1565b50604080518082018252338082526bffffffffffffffffffffffff60208084018281526000938452600a909152939091209151925116740100000000000000000000000000000000000000000273ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6040805173ffffffffffffffffffffffffffffffffffffffff8481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905291516000928392908716916111189190611524565b6000604051808303816000865af19150503d8060008114611155576040519150601f19603f3d011682016040523d82523d6000602084013e61115a565b606091505b50915091508180156111845750805115806111845750808060200190518101906111849190611469565b6111ea576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5472616e7366657248656c7065723a205452414e534645525f4641494c4544006044820152606401610505565b5050505050565b60025473ffffffffffffffffffffffffffffffffffffffff1615611271576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f436f4669583a21696e697469616c697a650000000000000000000000000000006044820152606401610505565b600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60008083601f8401126112ca57600080fd5b50813567ffffffffffffffff8111156112e257600080fd5b6020830191508360208285010111156112fa57600080fd5b9250929050565b60006020828403121561131357600080fd5b813561131e8161156f565b9392505050565b60006020828403121561133757600080fd5b815161131e8161156f565b60008060008060008060c0878903121561135b57600080fd5b86356113668161156f565b955060208701356113768161156f565b945060408701356113868161156f565b935060608701356113968161156f565b925060808701356113a68161156f565b915060a08701356113b68161156f565b809150509295509295509295565b60008060008060008060c087890312156113dd57600080fd5b86516113e88161156f565b60208801519096506113f98161156f565b604088015190955061140a8161156f565b606088015190945061141b8161156f565b608088015190935061142c8161156f565b60a08801519092506113b68161156f565b6000806040838503121561145057600080fd5b823561145b8161156f565b946020939093013593505050565b60006020828403121561147b57600080fd5b8151801515811461131e57600080fd5b6000806020838503121561149e57600080fd5b823567ffffffffffffffff8111156114b557600080fd5b6114c1858286016112b8565b90969095509350505050565b6000806000604084860312156114e257600080fd5b833567ffffffffffffffff8111156114f957600080fd5b611505868287016112b8565b90945092505060208401356115198161156f565b809150509250925092565b6000825160005b81811015611545576020818601810151858301520161152b565b81811115611554576000828501525b509190910192915050565b8183823760009101908152919050565b73ffffffffffffffffffffffffffffffffffffffff8116811461159157600080fd5b5056fea2646970667358221220d6b72bb25a9cbc706ecc4467d0448eb21877347ff9ac963ab44ed745ac8df8f764736f6c63430008060033";

export class CoFiXGovernance__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CoFiXGovernance> {
    return super.deploy(overrides || {}) as Promise<CoFiXGovernance>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CoFiXGovernance {
    return super.attach(address) as CoFiXGovernance;
  }
  connect(signer: Signer): CoFiXGovernance__factory {
    return super.connect(signer) as CoFiXGovernance__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CoFiXGovernanceInterface {
    return new utils.Interface(_abi) as CoFiXGovernanceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CoFiXGovernance {
    return new Contract(address, _abi, signerOrProvider) as CoFiXGovernance;
  }
}
