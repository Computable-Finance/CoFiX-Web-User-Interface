/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers'
import { Provider } from '@ethersproject/providers'
import type { NEST3VoteFactoryMock, NEST3VoteFactoryMockInterface } from '../NEST3VoteFactoryMock'

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_offerPrice',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    name: 'contractMapping',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'governance',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_offerPrice',
        type: 'address',
      },
    ],
    name: 'setOfferPrice',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'name',
        type: 'string',
      },
    ],
    name: 'checkAddress',
    outputs: [
      {
        internalType: 'address',
        name: 'contractAddress',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
]

export class NEST3VoteFactoryMock__factory {
  static readonly abi = _abi
  static createInterface(): NEST3VoteFactoryMockInterface {
    return new utils.Interface(_abi) as NEST3VoteFactoryMockInterface
  }
  static connect(address: string, signerOrProvider: Signer | Provider): NEST3VoteFactoryMock {
    return new Contract(address, _abi, signerOrProvider) as NEST3VoteFactoryMock
  }
}
